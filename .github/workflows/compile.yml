name: unraider_compile

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Cracked version"
        required: true
        default: 6.12.8
        type: choice
        options:
          - 6.11.5
          - 6.12.4
          - 6.12.8
      guid:
        description: "Flash usb drive guid"
        required: true
        type: string
      ssh:
        description: "SSH connection to Actions"
        required: false
        type: choice
        default: "false"
        options:
          - "true"
          - "false"

  workflow_call:
    inputs:
      version:
        description: "Cracked version"
        required: false
        default: 6.12.8
        type: string
      ssh:
        description: "SSH connection to Actions"
        required: false
        type: string
        default: "false"

permissions:
  contents: read

jobs:
  build_unraider:
    name: Build Unraider For ${{inputs.version}}
    runs-on: ubuntu-latest
    steps:
      - name: space cleanup and initiallzation environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo apt-get install libudev-dev -y

      - name: checkout source code
        uses: actions/checkout@v3

      - name: checkout submodule
        run: |
          git submodule update --init --recursive

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: compile
        run: |
          make clean && make all VERSION=$VERSION UUID=$UUID
          mkdir -p ./artifacts/$VERSION/ ./artifacts/$VERSION/
          cp -rf ./$VERSION/unraider ./artifacts/$VERSION
          cp -rf ./$VERSION/unraider ./artifacts/$VERSION
          # cp -rf ./src/hook.so ./artifacts
          # cp -rf ./code ./artifacts
        env:
          VERSION: ${{inputs.version}}
          UUID: ${{inputs.guid}}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: unraider
          path: ./artifacts
